diff -bur ulxmlrpcpp-1.4.7/ulxmlrpcpp/ulxr_tcpip_connection.cpp ulxmlrpcpp-1.4.7-patched/ulxmlrpcpp/ulxr_tcpip_connection.cpp
--- ulxmlrpcpp-1.4.7/ulxmlrpcpp/ulxr_tcpip_connection.cpp	2004-08-11 10:26:49.000000000 -0700
+++ ulxmlrpcpp-1.4.7-patched/ulxmlrpcpp/ulxr_tcpip_connection.cpp	2007-06-22 16:42:14.000000000 -0700
@@ -28,7 +28,7 @@
  ***************************************************************************/
 
 //#define ULXR_DEBUG_OUTPUT
-#define ULXR_REUSE_SOCKET
+#define ULXR_REUSE_SOCKET 1
 
 #ifndef ULXR_OMIT_TCP_STUFF
 
@@ -74,7 +74,6 @@
 #endif
 
   serverdomain = ULXR_PCHAR("");
-  remote_name = ULXR_PCHAR("");
   setTimeout(10);
   server_data = 0;
   port = prt;
@@ -116,7 +115,9 @@
                               i18n(ULXR_PCHAR("Could not get domain name: "))
                                    + ULXR_GET_STRING(getErrorString(getLastError())), 500);
 
-  if (buffer[0] != 0)
+  const char NULL_DOMAIN[] = "(none)";
+  // ignore empty domain string and the 'none' domain result
+  if (buffer[0] != 0 && strncmp(NULL_DOMAIN, buffer, sizeof(NULL_DOMAIN)) != 0)
   {
     host_name += ULXR_PCHAR(".");
     host_name += ULXR_GET_STRING(buffer);
@@ -287,24 +288,11 @@
                               i18n(ULXR_PCHAR("Could not connect: "))
                                    + ULXR_GET_STRING(getErrorString(getLastError())), 500);
 
-  struct hostent *host;
   remotedata_len = sizeof(remotedata);
   if(getpeername(fd_handle,(struct sockaddr *)&remotedata, &remotedata_len)<0)
     throw ConnectionException(SystemError,
                               i18n(ULXR_PCHAR("Could not get peer data: "))
                                    + ULXR_GET_STRING(getErrorString(getLastError())), 500);
-#ifdef __BORLANDC__
-  remote_name = ULXR_PCHAR("<remote-host>");  // FIXME, not working
-#else
-  else
-  {
-    if (0 == (host = gethostbyaddr((char*)&remotedata.sin_addr, sizeof remotedata.sin_addr,
-                                   AF_INET)))
-      remote_name = ULXR_GET_STRING(inet_ntoa(remotedata.sin_addr));
-    else                                     
-      remote_name = ULXR_GET_STRING(host->h_name);
-  }    
-#endif
 }
 
 
@@ -329,12 +317,6 @@
                               i18n(ULXR_PCHAR("Could not accept a connection: "))
                                    + ULXR_GET_STRING(getErrorString(getLastError())), 500);
 
-  struct hostent *host;
-  if (0 == (host = gethostbyaddr((char*)&remotedata.sin_addr, sizeof remotedata.sin_addr,
-                                 AF_INET)))
-    remote_name = ULXR_GET_STRING(inet_ntoa(remotedata.sin_addr));  
-  else  
-    remote_name = ULXR_GET_STRING(host->h_name);
   ULXR_TRACE(ULXR_PCHAR("/accept"));
 }
 
@@ -351,10 +333,27 @@
 }
 
 
+CppString ULXR_EXPORT TcpIpConnection::getPeerName() const
+{
+  CppString remote_name;
+#ifdef __BORLANDC__
+  remote_name = ULXR_PCHAR("<remote-host>");  // FIXME, not working
+#else
+  struct hostent *host;
+  if (0 == (host = gethostbyaddr((char*)&remotedata.sin_addr, sizeof remotedata.sin_addr,
+                                 AF_INET)))
+    remote_name = ULXR_GET_STRING(inet_ntoa(remotedata.sin_addr));  
+  else  
+    remote_name = ULXR_GET_STRING(host->h_name);
+#endif
+
+  return remote_name;
+}
+
+
 void ULXR_EXPORT TcpIpConnection::close()
 {
   ULXR_TRACE(ULXR_PCHAR("close"));
-  remote_name = ULXR_PCHAR("");
   Connection::close();
 }
 
diff -bur ulxmlrpcpp-1.4.7/ulxmlrpcpp/ulxr_tcpip_connection.h ulxmlrpcpp-1.4.7-patched/ulxmlrpcpp/ulxr_tcpip_connection.h
--- ulxmlrpcpp-1.4.7/ulxmlrpcpp/ulxr_tcpip_connection.h	2004-06-03 09:57:06.000000000 -0700
+++ ulxmlrpcpp-1.4.7-patched/ulxmlrpcpp/ulxr_tcpip_connection.h	2007-06-22 16:42:14.000000000 -0700
@@ -113,8 +113,13 @@
  /** Gets the name of the remote machine.
    * @return  the remote name.
    */
-   CppString getPeerName() const
-     { return remote_name; }
+   CppString getPeerName() const;
+
+ /** Gets the address of the remote machine.
+   * @return  the remote address.
+   */
+   struct sockaddr_in getPeerAddr() const
+     { return remotedata; }
 
  /** Converts ascii text to in_addr struct.
    * @param address  literal string of address to convert
@@ -206,7 +211,6 @@
    struct sockaddr_in  hostdata;
    socklen_t           hostdata_len;
 
-   CppString           remote_name;
    struct sockaddr_in  remotedata;
    socklen_t           remotedata_len;
 

