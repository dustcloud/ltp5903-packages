Snapshot 04/13/2009, to compile toolcahin from openembedded and a basic rootfs with Python 2.6.1, gbd, and gdbserver
Snapshot 05/04/2009, to compile toolcahin from openembedded and a complete rootfs with items that does not need Dust board
Snapshot 05/18/2009, final deliverble that do not rely on Dust board hardware fixes

assuming your workspace directory is /home/myself/workspace

untar the snapshot_2009XXXX.tgz file inside your workspace

you will have a directory /home/myself/workspace/snapshot_2009XXXX, and this will be our working directory.
edit the oe-setup.sh scripts to change BASE_DIR to your working directory, in this case /home/myself/workspace/snapshot_2009XXXX
you will also need to edited change BASE_DIR to your working directory, inside build/conf/local.conf

!! There is the first line in build/conf/local.conf need to be un-commented if using Ubuntu 8.10 !!

Inside the working directory, run the following:

	svn co svn://svn.berlios.de/bitbake/branches/bitbake-1.8/ bitbake
		This will checkout bitbake and create it under bitbake/

	git clone git://git.openembedded.net/openembedded
	cd openembedded
	git checkout df32f8c84d0e7a5fbe51b66ac8d991003bf0f8a0
		This will checkout the repository and create it under openembedded/
	
	cd ..
	cp -Rvf ./to_be_copied/* .
		This will add the needed files to the tree

	. ./oe-setup.sh /home/myself/workspace/snapshot_2009XXXX/build
	bitbake srd-console-base-image
		This will source the env variables,change directory into build and start the building process, which will take some time

	
	The resulting toolchain will be located /home/myself/workspace/snapshot_2009XXXX/build/tmp/cross/bin/
	The resulting rootfs images will be located in /home/myself/workspace/snapshot_2009XXXX/build/tmp/deploy/glibc/images/walnut/

Inside the working directory, under build/, there is a script compile_gdb_for_host.sh run it as follow AFTER the toolchain had been built to compile gdb for host
	
	./compile_gdb_for_host i686

